;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-weixin" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M503.04 408.32c17.92 0 30.72-12.8 30.72-30.72 0-17.92-11.52-30.72-30.72-30.72-17.92 0-37.12 11.52-37.12 30.72C465.92 395.52 483.84 408.32 503.04 408.32z"  ></path>' +
    '' +
    '<path d="M582.4 524.8c-11.52 0-24.32 12.8-24.32 24.32 0 12.8 12.8 24.32 24.32 24.32 19.2 0 30.72-11.52 30.72-24.32C613.12 537.6 600.32 524.8 582.4 524.8z"  ></path>' +
    '' +
    '<path d="M512 0C229.12 0 0 229.12 0 512c0 282.88 229.12 512 512 512s512-229.12 512-512C1024 229.12 794.88 0 512 0zM410.88 659.2c-30.72 0-55.04-6.4-85.76-12.8l-85.76 42.24 24.32-72.96c-61.44-42.24-97.28-98.56-97.28-165.12C166.4 335.36 276.48 243.2 410.88 243.2c120.32 0 225.28 72.96 247.04 171.52-7.68-1.28-15.36-1.28-23.04-1.28-116.48 0-207.36 87.04-207.36 193.28 0 17.92 2.56 34.56 7.68 51.2C426.24 659.2 418.56 659.2 410.88 659.2zM771.84 744.96l17.92 61.44-66.56-37.12c-24.32 6.4-48.64 12.8-72.96 12.8-116.48 0-208.64-79.36-208.64-177.92 0-97.28 92.16-177.92 208.64-177.92 110.08 0 207.36 79.36 207.36 177.92C857.6 659.2 820.48 707.84 771.84 744.96z"  ></path>' +
    '' +
    '<path d="M716.8 524.8c-11.52 0-24.32 12.8-24.32 24.32 0 12.8 12.8 24.32 24.32 24.32 17.92 0 30.72-11.52 30.72-24.32C747.52 537.6 734.72 524.8 716.8 524.8z"  ></path>' +
    '' +
    '<path d="M331.52 346.88c-17.92 0-37.12 11.52-37.12 30.72 0 17.92 17.92 30.72 37.12 30.72 17.92 0 30.72-12.8 30.72-30.72C362.24 359.68 349.44 346.88 331.52 346.88z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-qq" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 64C264.56 64 64.033 264.565 64.033 512.007 64.033 759.447 264.56 960 512 960c247.415 0 447.967-200.553 447.967-447.993C959.967 264.566 759.414 64 512 64L512 64zM758.643 651.644c-11.555 10.784-31.423-0.977-50.519-27.406-8.286 22.389-19.094 43.001-31.628 61.532 26.998 9.65 44.342 24.68 44.342 41.665 0 29.312-51.855 53.04-115.885 53.04-38.01 0-71.568-8.313-92.773-21.23-20.999 12.918-54.764 21.23-92.749 21.23-64.028 0-115.909-23.728-115.909-53.04 0-16.78 17.37-32.015 44.367-41.665-12.714-18.503-23.316-39.144-31.628-61.532-19.095 26.225-38.937 38.19-50.518 27.406-15.828-14.849-9.831-67.322 13.69-117.068 5.404-11.374 11.168-21.591 17.14-30.47C299.867 359.463 395.138 243.36 512 243.36l0.386 0c116.862 0 212.133 115.911 215.401 260.745 5.97 8.879 11.785 19.095 17.164 30.47C768.294 584.321 774.469 636.795 758.643 651.644L758.643 651.644z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-weibo" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M399.84 615.936c-22.816 0-43.808 18.784-44.16 39.488-0.288 17.664 14.56 31.104 34.464 31.104 23.68 0.032 43.488-17.792 43.648-39.232C433.952 629.024 419.68 615.936 399.84 615.936z"  ></path>' +
    '' +
    '<path d="M456.608 600.192c-6.784 3.328-13.312 8.224-17.984 14.144-0.992 1.28 5.952 8.832 11.584 16.928 7.232-7.936 13.76-12.512 16.16-18.688C467.424 609.92 457.728 599.616 456.608 600.192z"  ></path>' +
    '' +
    '<path d="M599.904 510.432c-11.008-6.88-22.848-12.64-34.944-17.536-40.48-16.192-82.944-20.992-126.112-17.216-65.28 5.664-125.568 24.896-172.448 73.312-54.368 56.096-47.008 127.104 16.992 171.616 43.328 30.08 92.512 40.416 144.48 39.168 9.44 0 18.912 0.736 28.288-0.128 59.168-5.664 113.664-23.616 158.816-63.648C680.96 637.6 674.336 557.184 599.904 510.432zM526.688 675.328c-22.464 34.048-62.24 54.72-105.44 54.944-54.464 0.352-95.328-30.24-102.56-77.824-1.6-9.728-1.152-20.416 1.056-29.952 10.976-46.688 43.296-72.768 87.296-84.544 43.456-11.52 83.872-4 115.488 30.528C548.704 597.056 549.76 640.608 526.688 675.328z"  ></path>' +
    '' +
    '<path d="M512.032 0C229.248 0 0 229.248 0 512c0 282.752 229.248 512 512 512 282.752 0 512-229.248 512-512C1024 229.248 794.784 0 512.032 0zM756.192 664.864c-43.744 67.296-110.944 100.672-186.016 119.072-36.32 8.96-74.24 11.712-93.952 14.72-93.088-2.304-165.088-16.064-230.016-56.416-81.824-50.848-105.664-127.04-62.88-213.44 45.952-92.672 117.44-161.216 211.264-205.28 17.408-8.16 37.216-12.8 56.32-15.168 39.36-4.896 62.336 17.44 61.344 57.056-0.224 8.672-2.176 17.216-2.688 25.952-0.384 7.456 0.16 15.04 0.352 22.528 7.648-1.248 15.36-2.048 22.848-3.712 30.336-6.496 60.352-17.344 90.912-18.976 53.056-2.816 76.832 29.312 60.704 79.712-6.944 21.472-1.76 28.704 18.304 35.904C778.144 534.016 799.872 597.728 756.192 664.864zM716.608 382.336c-12.48-15.872-40.8-19.552-49.76-19.648-13.248-0.096-23.936-10.944-23.808-24.16 0.096-13.184 10.816-23.776 23.936-23.776l0.192 0c5.856 0 58.368 1.504 87.104 37.92 11.392 14.432 23.072 40.096 13.824 80.032-2.56 11.136-12.448 18.624-23.36 18.624-1.76 0-3.552-0.224-5.376-0.672-12.928-2.976-20.96-15.872-17.984-28.736C725.408 404.448 723.84 391.488 716.608 382.336zM857.696 460.8c-1.888 11.776-12.032 20.288-23.68 20.288-1.184 0-2.496-0.16-3.744-0.352-13.056-2.016-21.984-14.304-19.968-27.392 8.896-56.608-0.16-100.64-27.04-130.72-46.784-52.416-132.544-49.312-133.408-49.312-13.376 0.544-24.448-9.696-25.024-22.88-0.544-13.216 9.76-24.416 22.944-25.024 4.448-0.16 109.44-3.84 171.264 65.248C855.904 332.032 868.896 389.28 857.696 460.8z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-icon-copy" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M510.335 18.504c-279.329 0-506.23 228.273-506.23 509.973 0 281.62 226.901 509.895 506.23 509.895 279.504 0 506.076-228.273 506.076-509.895 0-281.7-226.572-509.973-506.076-509.973zM193.922 846.362c0.774 9.852-6.531 15.628-16.335 15.628h-1.774c-9.12 0-16.82-3.102-17.712-12.449-13.563-152.121 34.138-257.82 76.753-321.446 15.333-23.094 31.065-41.142 45.297-56.289-3.577-8.162-5.548-16.788-5.548-26.35 0-36.976 29.882-66.635 66.572-66.635 36.887 0 66.464 30.013 66.464 66.988 0 37.19-29.578 67.148-66.464 67.148-14.141 0-27.188-4.435-38.083-12.010-12.549 13.51-26.188 28.574-39.475 48.704-56.451 85.105-80.091 183.846-69.697 296.711zM338.206 652.099c-15.109 0-30.459-1.694-45.095-4.98-9.673-2.304-15.427-11.971-13.431-21.535 2.353-9.776 11.748-15.868 21.354-13.562 12.063 2.783 24.613 4.186 37.173 4.186 91.198 0 165.297-74.67 165.297-166.37 0-91.73-74.101-166.398-165.297-166.398-90.987 0-165.178 74.668-165.178 166.398 0 26.591 6.058 52.237 18.121 75.861 4.639 8.767 1.17 19.628-7.83 24.105-8.79 4.714-19.383 1.216-23.931-7.681-14.533-28.289-22.050-60.395-22.050-92.284 0-111.649 90.093-202.474 200.868-202.474 110.884 0 200.989 90.825 200.989 202.474 0 111.46-90.105 202.261-200.988 202.261zM711.81 416.728c-17.818 0.422-35.929-3.393-52.142-11.179-56.766-27.178-80.997-95.78-54.012-152.996 26.89-57.214 95.062-81.637 151.828-54.435 56.769 27.124 80.999 95.916 53.906 152.915-3.97 7.897-8.332 15.365-13.642 22.146-3.365 4.37-9.881 5.19-14.244 1.695-4.365-3.495-5.045-9.986-1.577-14.356 4.363-5.484 8.092-11.759 11.039-18.249 22.286-46.937 2.523-103.489-44.287-125.607-46.704-22.436-102.574-2.491-124.624 44.739-22.422 46.99-2.578 103.302 44.234 125.712 13.509 6.411 28.173 9.589 42.889 8.979 5.647-0.080 10.407 4.318 10.512 9.985 0.267 5.668-4.151 10.355-9.881 10.65zM869.735 493.091c-80.604-30.010-123.809-80.842-145.783-118.323-7.884-13.558-13.665-26.407-17.82-37.399-5.229-0.079-10.142-1.485-14.924-3.579-19.081-9.191-26.994-31.703-17.981-50.724 8.884-18.965 31.329-27.018 50.255-17.957 18.761 9.060 26.7 31.707 17.872 50.646-3.446 7.181-8.992 12.954-15.406 16.527 3.945 9.988 9.093 21.033 16.111 32.82 29.462 49.93 74.881 86.534 134.61 108.759 5.34 2.092 7.915 7.762 6.128 13.059-0.108 0.476-0.317 0.687-0.317 1.006-2.367 4.66-7.676 6.965-12.747 5.165z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)